// Code generated by MockGen. DO NOT EDIT.
// Source: ranking.go

// Package queryService is a generated GoMock package.
package queryService

import (
	gomock "github.com/golang/mock/gomock"
	dto "influ-dojo/api/usecase/dto"
	reflect "reflect"
)

// MockRanking is a mock of Ranking interface.
type MockRanking struct {
	ctrl     *gomock.Controller
	recorder *MockRankingMockRecorder
}

// MockRankingMockRecorder is the mock recorder for MockRanking.
type MockRankingMockRecorder struct {
	mock *MockRanking
}

// NewMockRanking creates a new mock instance.
func NewMockRanking(ctrl *gomock.Controller) *MockRanking {
	mock := &MockRanking{ctrl: ctrl}
	mock.recorder = &MockRankingMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRanking) EXPECT() *MockRankingMockRecorder {
	return m.recorder
}

// LoadRankingAll mocks base method.
func (m *MockRanking) LoadRankingAll() (*dto.RankingAll, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LoadRankingAll")
	ret0, _ := ret[0].(*dto.RankingAll)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LoadRankingAll indicates an expected call of LoadRankingAll.
func (mr *MockRankingMockRecorder) LoadRankingAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LoadRankingAll", reflect.TypeOf((*MockRanking)(nil).LoadRankingAll))
}
